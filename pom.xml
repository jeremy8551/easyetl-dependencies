<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>icu.etl</groupId>
    <artifactId>easyetl-dependencies</artifactId>
    <version>1.0.0</version>

    <!-- 项目信息 -->
    <name>easyetl-dependencies</name>
    <url>https://github.com/jeremy8551/easyetl-dependencies/</url>
    <description>easyetl-dependencies</description>
    <packaging>pom</packaging>

    <modules>
        <module>easyetl-tool</module>
        <module>easyetl-maven-plugin</module>
    </modules>

    <!-- 属性（子模块可以继承直接使用） -->
    <properties>
        <!-- 编译插件属性 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.charset>UTF-8</maven.compiler.charset> <!-- 源文件和资源文件的字符集，easyetl-maven-plugin 插件使用的字符集 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.version>3.8.1</maven.compiler.version>

        <!-- 单元测试插件属性-->
        <maven.test.version>2.12.4</maven.test.version>
        <maven.test.skip>false</maven.test.skip> <!-- true表示不执行单元测试 -->

        <!-- Javadoc插件属性-->
        <maven.javadoc.version>3.5.0</maven.javadoc.version>
        <maven.javadoc.skip>false</maven.javadoc.skip> <!-- false表示生成javadoc包 -->
        <maven.javadoc.failOnError>false</maven.javadoc.failOnError> <!-- false表示当javadoc错误时继续向下执行 -->

        <!-- 源文件插件属性-->
        <maven.source.version>3.2.1</maven.source.version>

        <!-- 上传到中央仓库需要的插件-->
        <sornatype.nexeus.version>1.6.7</sornatype.nexeus.version>
        <maven.gpg.version>3.0.1</maven.gpg.version>

        <!-- easyetl项目的统一版本号 -->
        <easyetl.project.version>2.0.0</easyetl.project.version>

        <!-- 依赖构件的版本号 -->
        <junit.version>4.12</junit.version>
        <slf4j.api.version>2.0.9</slf4j.api.version>
        <logback.version>1.3.6</logback.version>
        <springboot.version>1.5.10.RELEASE</springboot.version>
        <servlet.api.version>3.1.0</servlet.api.version>
    </properties>

    <!-- Apache Licene 2.0 开源软件许可证 -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- 开发人员 -->
    <developers>
        <developer>
            <name>jeremy8551</name>
            <email>jeremy8551@qq.com</email>
            <timezone>+8</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 测试工具包 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- SpringBoot框架 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${springboot.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- SpringBoot场景启动器开发依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${springboot.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- servlet规范 -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- DB2数据库驱动 -->
            <dependency>
                <groupId>com.ibm.db2.jcc</groupId>
                <artifactId>db2jcc</artifactId>
                <version>db2jcc4</version>
                <scope>runtime</scope>
            </dependency>

            <!-- slf4j日志门面 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- logback日志 -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-tool</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-logger</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-ioc</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-expression</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-io</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-cn</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-jdk</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-concurrent</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-apache</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-jsch</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-os</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-database</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-file</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-script</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-compress</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-maven-plugin</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>icu.etl</groupId>
                <artifactId>easyetl-spring-boot-starter</artifactId>
                <version>${easyetl.project.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- easyetl的编译插件 -->
                <plugin>
                    <groupId>icu.etl</groupId>
                    <artifactId>easyetl-maven-plugin</artifactId>
                    <version>${easyetl.project.version}</version>
                </plugin>

                <!-- 单元测试插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.test.version}</version>
                    <configuration>
                        <skip>${maven.test.skip}</skip>
                    </configuration>
                </plugin>

                <!-- 编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <!-- 生成源文件jar的插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 生成 Javadoc 的jar文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.version}</version>
                    <configuration>
                        <!-- 配置不需要校验的包名,用半角逗号分隔 -->
                        <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/exclude-package-names.html -->
                        <excludePackageNames>icu.jsch.*,icu.apache.*</excludePackageNames>
                        <tags>
                            <tag>
                                <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/tag-configuration.html -->
                                <name>createtime</name> <!-- 自定义 @createtime 标记，屏蔽生成javadoc时的错误信息 -->
                                <placement>a</placement> <!-- 指定标签的放置位置，a表示能在所有位置使用 -->
                                <head>创建时间:</head> <!-- 定义标签的前缀，例如 "作者:" 或 "版本:" -->
                            </tag>
                        </tags>
                        <!--                    <show>private</show>-->
                        <!--                    <nohelp>true</nohelp>-->
                        <!--                    <charset>UTF-8</charset>-->
                        <!--                    <encoding>UTF-8</encoding>-->
                        <!--                    <docencoding>UTF-8</docencoding>-->
                        <!--                    <additionalparam>-Xdoclint:none</additionalparam>-->
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <doclint>none</doclint> <!-- 禁用DocLint检查,屏蔽警告和报错信息 -->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- GPG签名插件,对项目最后生成的jar包进行签名 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven.gpg.version}</version>
                    <executions>
                        <execution>
                            <phase>verify</phase> <!-- 验证阶段 -->
                            <goals>
                                <goal>sign</goal> <!-- 插件目标: 在验证阶段执行 GPG 签名操作 -->
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- sonatype插件，用于登录验证、上传jar到sonatype的maven仓库 -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${sornatype.nexeus.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <!-- 这里的 https://s01.oss.sonatype.org/ 是生成 sonatype 的issues工单时, 机器人评论的那个地址-->
                        <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>